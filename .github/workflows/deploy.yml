name: Deploy Documentation

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: |
          echo "::set-output name=dir::$(npm cache dir)"
          echo "::set-output name=version::$(npm -v)"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Cache node_modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ steps.npm-cache-dir-path.outputs.version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: cd docs && npm list

      - name: Install Dependencies
        run: |
          cd docs
          npm install

      - name: List node_modules (for debugging)
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          echo "Listing node_modules as cache was not hit:"
          ls -la docs/node_modules

      - name: Build Documentation
        run: npm run docs:publish

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/dist/client

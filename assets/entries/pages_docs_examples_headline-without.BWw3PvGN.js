import{j as e,C as n,f as l,H as o,g as d,h,e as c,k as p,l as m,b as x,d as u,i as f,o as j,a as g}from"../chunks/chunk-CMvKMWtq.js";import{i as y}from"../chunks/chunk-DTLx8GJJ.js";import{D as v}from"../chunks/chunk-BCN8JSgu.js";import{S as t,a as s,b as i,c as a,d as r}from"../chunks/chunk-BFFOM0Zl.js";/* empty css                      */import"../chunks/chunk-CYDrz2XN.js";/* empty css                      *//* empty css                      *//* empty css                      */const T=()=>e.jsxs(e.Fragment,{children:[e.jsx(v,{main:"Headline Component (Tailwind / Uno)",pre:"Working with Variants",excerpt:e.jsxs(e.Fragment,{children:["An example of an headline component that fully utilizes the features of"," ",e.jsx(n,{children:"variants"})," and Tailwind / Uno classes."]})}),e.jsx(t,{children:"Intro"}),e.jsxs(s,{children:[e.jsx(i,{children:"Consistent typography is key to a cohesive user interface in web development. The Headline component streamlines the creation and management of headline elements in React projects by leveraging react-classmate. It supports rendering standard HTML heading tags (h1 to h6) as well as other elements like strong, span, p, and div."}),e.jsxs("p",{children:["With predefined styling variants and preset components (",e.jsx(n,{children:"H1Headline"}),","," ",e.jsx(n,{children:"H2Headline"}),", etc.), the Headline component ensures uniform styling and reduces repetitive code. This approach improves maintainability and simplifies the implementation of design changes across your application. Whether you're building a blog, an e-commerce site, or another type of web application, the Headline component offers a practical solution for managing typography efficiently."]})]}),e.jsx(t,{children:"Idea and Example"}),e.jsxs(s,{children:[e.jsx(i,{children:"With the Convenience Components, you can easily create headlines with different levels and elements."}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsxs("aside",{children:[e.jsx(a,{children:"Regular Ordering"}),e.jsxs(r,{children:[e.jsx(l,{children:"Heading 1"}),e.jsx(o,{children:"Heading 2"}),e.jsx(d,{children:"Heading 3"}),e.jsx(h,{children:"Heading 4"}),e.jsx(c,{children:"Heading 5"}),e.jsx(p,{children:"Heading 6"})]})]}),e.jsxs("aside",{children:[e.jsx(a,{children:"Custom Order"}),e.jsxs(r,{children:[e.jsx(l,{as:"div",children:"Heading 1"}),e.jsx(o,{as:"span",children:"Heading 2"}),e.jsx(d,{as:"p",children:"Heading 3"}),e.jsx(h,{as:"strong",children:"Heading 4"}),e.jsx(c,{as:"h3",children:"Heading 5"}),e.jsx(p,{as:"h5",children:"Heading 6"})]})]})]}),e.jsxs("aside",{children:[e.jsxs(a,{children:["Generator Usage - variant used from ",e.jsx(n,{$size:"lg",children:"as"})," prop"]}),e.jsxs(i,{children:["Note: The ",e.jsx(n,{children:"as"})," property is required to tell which component should be created. It tries to match the variant with the component name."]}),e.jsx(r,{children:e.jsx(m,{as:"h4",children:"Example Headline"})}),e.jsx(a,{children:"Generator Usage - custom variant prop"}),e.jsx(r,{children:e.jsx(m,{as:"p",variant:"h5",children:"Example Headline"})})]})]}),e.jsx(t,{children:"Full Component"}),e.jsx(s,{children:e.jsx(i,{children:"In order to work with the visual classes, you will need to install tailwind or uno-css (windi/tw preset) alongside the react-classmate. We'll walk through all the important bits after this section"})}),e.jsx(t,{children:"Step by Step"}),e.jsxs(s,{children:[e.jsx(a,{children:"1. Setup accepted elements and types"}),e.jsxs(i,{children:["We define the set of HTML elements that the Headline component can render. This includes standard heading levels (",e.jsx(n,{children:"h1"})," to ",e.jsx(n,{children:"h6"}),") and additional elements such as ",e.jsx(n,{children:"strong"}),", ",e.jsx(n,{children:"span"}),","," ",e.jsx(n,{children:"p"}),", and ",e.jsx(n,{children:"div"}),". By specifying these, we ensure that the Headline component is flexible and can accommodate various HTML tags based on the provided props."]}),e.jsx(i,{children:'Additionally, we introduce a custom variant type (`RcVariantType`) that includes both the headline levels and a "blank" variant. The "blank" variant allows the component to render non-heading elements without applying any specific headline styles.'}),e.jsx(a,{children:"2. Setup Variants"}),e.jsx(i,{children:"Here, we configure the styling variants for each headline level using the `VariantsConfig` type from `react-classmate`. This configuration maps each variant to specific CSS classes or dynamic styles."}),e.jsxs(i,{children:["This allows you to use the usual"," ",e.jsx(x,{href:u.docs.variants,children:"Variants"})," and"," ",e.jsx(x,{href:u.util.style,children:"CSS-in-JS (style)"})," syntax to define the styles for each headline level."]}),e.jsx(a,{children:"3. Create Variant Map"}),e.jsxs(i,{children:["This section utilizes the ",e.jsx(n,{children:"createVariantMap"})," function to generate a mapping between the defined elements and their corresponding variant configurations. The"," ",e.jsx(n,{children:"hVariantMap"}),"object serves as a lookup table, allowing the Headline component to select the appropriate styles based on the element type (",e.jsx(n,{children:"as"})," prop) provided. By merging"," ",e.jsx(n,{children:"additionalElements"})," and",e.jsx(n,{children:"headlineLevels"}),", we ensure that all supported elements are accounted for in the variant map."]}),e.jsx(a,{children:"4. Define the React Component"}),e.jsxs(i,{children:["We define the main ",e.jsx(n,{children:"Headline"})," component here, which is responsible for rendering the appropriate HTML element with the correct styling based on the provided props. The component determines whether the ",e.jsx(n,{children:"as"})," prop corresponds to a headline level or an additional element."]}),e.jsxs(i,{children:["It then selects the appropriate variant to apply. If no variant is specified, it defaults to the variant matching the ",e.jsx(n,{children:"as"}),' prop for headline elements or uses the "blank" variant for additional elements. This design ensures flexibility and reusability across different parts of your application.']}),e.jsx(a,{children:"5. Create Convenience Components"}),e.jsxs(i,{children:["To simplify the usage of different headline levels, we create convenience components like"," ",e.jsx(n,{children:"H1Headline"}),", ",e.jsx(n,{children:"H2Headline"}),", etc. These components preset the ",e.jsx(n,{children:"as"})," prop to a specific headline level, reducing the need to specify it manually each time. Additionally, if a different ",e.jsx(n,{children:"as"})," prop is provided, the variant adjusts accordingly to maintain consistent styling."]}),e.jsxs(i,{children:["The refactored ",e.jsx(n,{children:"createHeadlineComponent"})," function now uses an inline type definition for props, combining ",e.jsx(n,{children:"as"})," with all HTML attributes. This approach reduces redundancy and makes the code more concise."]}),e.jsx(a,{children:"6. Export(s)"}),e.jsxs(i,{children:["Finally, we export the convenience headline components for external use. Each exported component corresponds to a specific headline level, allowing for straightforward integration into your application's UI. The default export is the main ",e.jsx(n,{children:"Headline"})," component, providing maximum flexibility for custom use cases."]})]})]}),H=Object.freeze(Object.defineProperty({__proto__:null,default:T},Symbol.toStringTag,{value:"Module"})),A={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Loading:{type:"standard",definedAtData:{filePathToShowToUser:"vike-react/__internal/integration/Loading",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:f}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"vike-react/__internal/integration/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:j}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"vike-react/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},title:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+config.ts",fileExportPathToShowToUser:["default","title"]},valueSerialized:{type:"js-serialized",value:"react-classmate"}},lang:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+config.ts",fileExportPathToShowToUser:["default","lang"]},valueSerialized:{type:"js-serialized",value:"en"}},Layout:{type:"cumulative",definedAtData:[{filePathToShowToUser:"/pages/docs/+Layout.tsx",fileExportPathToShowToUser:[]},{filePathToShowToUser:"/pages/+Layout.tsx",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"plus-file",exportValues:y},{type:"plus-file",exportValues:g}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/docs/examples/headline-without/+Page.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:H}}};export{A as configValuesSerialized};
